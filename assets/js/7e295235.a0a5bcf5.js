"use strict";(self.webpackChunkultronglow=self.webpackChunkultronglow||[]).push([[5625],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),d=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=d(r),m=n,f=u["".concat(s,".").concat(m)]||u[m]||c[m]||o;return r?a.createElement(f,i(i({ref:t},p),{},{components:r})):a.createElement(f,i({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:n,i[1]=l;for(var d=2;d<o;d++)i[d]=r[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8986:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var a=r(7462),n=(r(7294),r(3905));const o={sidebar_position:2},i="Get Daily Reward Data",l={unversionedId:"API/Get_Daily_Reward_Data",id:"API/Get_Daily_Reward_Data",title:"Get Daily Reward Data",description:"Rate Limits",source:"@site/docs/API/Get_Daily_Reward_Data.md",sourceDirName:"API",slug:"/API/Get_Daily_Reward_Data",permalink:"/API/Get_Daily_Reward_Data",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/API/Get_Daily_Reward_Data.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Get Storage Pledge Information",permalink:"/API/Get_Storage_Pledge_Information"},next:{title:"Get Total Revenue Data",permalink:"/API/Get_Total_Revenue_Data"}},s={},d=[{value:"Rate Limits",id:"rate-limits",level:2},{value:"Details",id:"details",level:2},{value:"Request URL parameters",id:"request-url-parameters",level:2},{value:"JSON response body",id:"json-response-body",level:2}],p={toc:d};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"get-daily-reward-data"},"Get Daily Reward Data"),(0,n.kt)("h2",{id:"rate-limits"},"Rate Limits"),(0,n.kt)("p",null,"API calls are limited to 4 calls per minute"),(0,n.kt)("h2",{id:"details"},"Details"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Item"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Request"),(0,n.kt)("td",{parentName:"tr",align:"left"},"http GET/POST")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"Encoding Format"),(0,n.kt)("td",{parentName:"tr",align:"left"},"UTF-8")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},"URL"),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"https://api.ultronscan.io/third/getRewards?address=ux....&datetime=1651334400000"},"https://api.ultronscan.io/third/getRewards?address=ux....&datetime=1651334400000"))))),(0,n.kt)("h2",{id:"request-url-parameters"},"Request URL parameters"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'address: "ux...", //Reward Address\nstartblock: 10000, //The starting block of the query\nendblock: 20000, //The end block of the query\ntype: ""/1/2, //Reward type, optional 1: PoSR reward 2: PoTS 3: POS delegation reward Empty: All rewards for the address\n')),(0,n.kt)("h2",{id:"json-response-body"},"JSON response body"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "result": {\n    "address": "ux...", //Reward Address\n    "startblock": 10000, //Statistics start block\n    "endblock": 20000, //Statistics end block\n    "rewards":[ //Reward list\n      {\n        "address": "ux...", //Storage node address / PoS node address\n        "blocknumber": 3300, //Lock height\n        "rewardAmount": 1000000000000, //Total amount of the locked rewards record (including released and burnt amount in the locked position)\n        "releaseAmount": 1234000000, //released Amount\n        "burntAmount": 0, //burnt Amount\n        "lockPeriod": 259200, //lockPeriod\n        "releasePeriod": 1555200, //releasePeriod\n        "releaseInterval": 8640, //releaseInterval\n        "type": 1/2/3, //Reward type, optional 1: PoSR reward 2: PoTS 3: PoS delegation reward\n      }\n    ]\n  },\n  "message": "successful",\n  "statusCode": 0\n}\n')),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"The request parameter ",(0,n.kt)("inlineCode",{parentName:"p"},"datetime")," is the date and time stamp (milliseconds), and returns the\ntime stamp ",(0,n.kt)("inlineCode",{parentName:"p"},"starttime")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"endtime")," of the statistical time range."),(0,n.kt)("p",{parentName:"admonition"},"For example, the time stamp of 2022-05-01 00:00:00 (UTC+8) is 1651334400000.  The returned\nstatistical time is 2022-04-30 13:00:00 (1651294800000) - 2022-05-01 13:00:00 (1651381200000).")))}u.isMDXComponent=!0}}]);